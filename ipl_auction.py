# -*- coding: utf-8 -*-
"""IPL_Auction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qgMMaqhET02OplzLsmOeV51pRftQYM5L
"""

#Code References:
#https://github.com/nidhi988/IPL-Auction-analysis
#https://www.kaggle.com/ramesh1511/ipl-auction-2020-analysis


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#Using pandas to read the file
#Dataframe of IPL Auction Data is formed.
ipl_auction_df = pd.read_csv("IPLData.csv",engine = 'python')

#Show the first 5 rows of the ipl_auction_df Dataframe.
ipl_auction_df.head()

# IPL Matches played by any Player is Nan then they are replaced by 0.
ipl_auction_df['IPL Matches'] = ipl_auction_df['IPL Matches'].fillna(0)

#IPL 2019 Team  column in dataframe has Nan value then replace it by "No Team"
ipl_auction_df['IPL 2019 Team'] = ipl_auction_df['IPL 2019 Team'].fillna("No Team")

#Represents colours brown,orange,yellow,red, blue, pink,blue,dark blue,dark blue , magenta, light blue.
a1_color = [ '#8C411E','#F97324','#F9CD05','#EC1C24','#00ADEF','#FB2897','#004BA0','#00008B','#9E3495','#C0D6EB']

plt.figure(figsize=(17,6))
plt.yticks(fontsize=15)
#Data of Top 10 Highest Auction Price players Data from the ipl_auction_df dataframe is considered.
a_r =ipl_auction_df.nlargest(10, ['Auctioned Price(in RS Lacs)'])

#Arranged List of Top 10 Highest Auctioned IPL Players are considered and plotted in bar graph.
plt.bar(np.arange(10),a_r.iloc[0:11,10],color=a1_color,align='center')
plt.xticks(np.arange(10),a_r.iloc[0:11,3],rotation=90,fontsize=15)
plt.grid(True , linestyle = '--',linewidth = 0.3)
plt.xlabel("Name",fontsize=15)
plt.ylabel('Auctioned Price(in RS Lacs)',fontsize=15)
plt.title("Top 10 buys in IPL history",fontsize=20)
plt.show()

plt.figure(figsize=(17,6))
#cap_count gives the number of Capped and number of Uncapped Associates.
cap_count  = ipl_auction_df['Capped / Uncapped /Associate'].value_counts()
ax = cap_count.plot(kind='bar', color=['c','y'])
ax.set_ylabel('number of players')
ax.set_title('capped and uncapped players')


#  playing_role specifies all the different role of players.
playing_role = ipl_auction_df['Playing Role']
#list of playing role is formed.
playing_role = list(dict.fromkeys(playing_role))

#Provides count of All Rounder, Wicket Keeper, Fast Bowler, Spinner, Bowler, Batsmen.
playing_role_count = ipl_auction_df['Playing Role'].value_counts()

#Player playing roles are considered as labels.
labels = ipl_auction_df['Playing Role']

plt.figure(figsize=(14,14))
#plotting Piechart of Players playign differnt Roles.
plt.pie(playing_role_count, labels = playing_role ,colors = ['blue','purple','pink','mediumblue','red','darkorange','yellow','orange'],
        autopct='%0.1f%%', textprops={'fontsize': 20})
plt.xticks(fontsize = 100)
plt.title("Plot of different players playing the game ",fontsize = 50)
plt.legend(loc = 'center')
plt.show()

plt.figure(figsize=(16,16))
# team_name specifies the team names in IPL.
team_name = ipl_auction_df['IPL 2020 Team']

#list of team names are formed.    
team_name = list(dict.fromkeys(team_name))

# number_of_players_in_different_teams are feteched from the ipl_auction_df dataframe.
number_of_players_in_different_teams = ipl_auction_df['IPL 2020 Team'].value_counts()
labels = ipl_auction_df['IPL 2020 Team']
plt.pie(number_of_players_in_different_teams, labels = team_name ,colors = ['blue','purple','pink','mediumblue','red','darkorange','yellow','orange'],
        autopct='%2.1f%%', textprops={'fontsize': 20})
plt.xticks(fontsize = 100)
plt.title("Total number of players in input belonging to different teams ",fontsize = 50)
plt.legend(loc = 'center')
plt.show()

#Finding how many number of players each team bought
width1 = 30
height1 = 10
width_height_1 = (width1, height1)
plt.figure(figsize=width_height_1)
d = ipl_auction_df['IPL 2020 Team']
dv = ipl_auction_df['IPL 2020 Team'].value_counts()
print(dv)
dv.plot(kind = 'bar',color = ['pink','purple','Orange','red','mediumblue','darkorange','midnightblue','yellow'])
plt.grid(color='#95a5a6', linestyle='--', linewidth=2, axis='y', alpha=0.7)
#for printing the team names in bold fashion.
plt.xticks(fontsize = 30,rotation = 45)
plt.yticks(fontsize = 30)
plt.xlabel("Team that bought players",fontsize = 30)
plt.ylabel("Number of players",fontsize = 30)
plt.title("Number of players each team bought",fontsize = 30)
plt.show()

#width1 = 30
#height1 = 10
width_height_1 = (width1, height1)
plt.figure(figsize=width_height_1)
sns.countplot(x = 'IPL Matches',data = ipl_auction_df,
              palette = 'summer')
plt.grid(color='#95a5a2', linestyle='--', linewidth=2, axis='y', alpha=0.7)
plt.xticks(fontsize = 30,rotation = 65)
plt.yticks(fontsize = 30)
plt.xlabel("IPL Matches played",fontsize = 25)
plt.ylabel("Number of players",fontsize = 25)
plt.title("IPL Matches played by the all the purchased players",fontsize = 30)
plt.show()


#Finding the correlation between reserved price and number of players sold
#width1 = 30
#height1 = 10
width_height_1 = (width1, height1)
plt.figure(figsize=width_height_1)

i = ipl_auction_df['Reserve Price(in RS Lacs)'].value_counts()
print(i)
sns.countplot(x = 'Reserve Price(in RS Lacs)',data = ipl_auction_df,
              palette = 'summer',)
plt.grid(color='#95a5a6', linestyle='--', linewidth=2, axis='y', alpha=0.7)
plt.xticks(fontsize =25)
plt.yticks(fontsize = 25)
plt.xlabel("Reserve Price(in RS Lacs)",fontsize = 25)
plt.ylabel("Number of players",fontsize = 25)
plt.title("Price planned to purchase the players",fontsize = 40)


#Finding the correlation between reserved price and number of players sold
#width1 = 30
#height1 = 10
width_height_1 = (width1, height1)
plt.figure(figsize=width_height_1)

i = ipl_auction_df['Auctioned Price(in RS Lacs)'].value_counts()
print(i)
sns.countplot(x = 'Auctioned Price(in RS Lacs)',data = ipl_auction_df,
              palette = 'summer',)
plt.grid(color='#95a5a6', linestyle='--', linewidth=2, axis='y', alpha=0.7)
plt.xticks(fontsize =25)
plt.yticks(fontsize = 25)
plt.xlabel("Auctioned Price(in RS Lacs)",fontsize = 25)
plt.ylabel("Number of players",fontsize = 25)
plt.title("Number of players corresponding to price",fontsize = 40)

#Finding the correlation between playing role and number of players sold
#width1 = 30
#height1 = 10
width_height_1 = (width1, height1)
plt.figure(figsize=width_height_1)

g = ipl_auction_df['Playing Role'].value_counts()
print(g)
sns.countplot(x = 'Playing Role',data = ipl_auction_df,
              palette = 'summer',
             #order = df['Playing Role'].value_counts()
             )
plt.grid(color='#95a3a1', linestyle='--', linewidth=2, axis='y')
plt.xticks(fontsize =30,rotation = 0)
plt.yticks(fontsize = 30)
plt.xlabel("Playing role",fontsize = 35)
plt.ylabel("Number of players",fontsize = 35)
plt.title("Stats of players depending on the playing role",fontsize = 50)